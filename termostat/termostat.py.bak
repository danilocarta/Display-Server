from PCF8574 import PCF8574_GPIO
from Adafruit_LCD1602 import Adafruit_CharLCD
import RPi.GPIO as GPIO
import Freenove_DHT as DHT
from time import sleep
import math
import urllib.request

GPIO.setwarnings(False)
GPIO.setmode(GPIO.BOARD)
DHTPin = 11     #define the pin of DHT11
buzzerPin = 40     #define the pin of Buzzer
limit = 25

GPIO.setup(buzzerPin, GPIO.OUT)
GPIO.output(buzzerPin, False)

def loop():
    dht = DHT.DHT(DHTPin)   #create a DHT class object
    counts = 0 # Measurement counts
    mcp.output(3,1)     # turn on LCD backlight
    lcd.begin(16,2)     # set number of LCD lines and columns
    destroy()
    lcd.message('Lettura sensori,\navvio in corso..')
    while(True):
        for i in range(0,15):
            chk = dht.readDHT11()     #read DHT11 and get a return value. Then determine whether data read is normal according to the return value.
            if (chk is dht.DHTLIB_OK):      #read DHT11 and get a return value. Then determine whether data read is normal according to the return value.
                break
            sleep(0.1)
        if dht.temperature > limit:
            lcd.setCursor(0,0)  # set cursor position
            message1 = ("Tempera.: {:.1f}").format(dht.temperature)+chr(223)+"  \n"
            message2 = ("Umidita': {:.0%}    ").format(dht.humidity/100)
            lcd.message(message1)
            lcd.message(message2)
            if dht.temperature > 18:
                alertor("RaspiServer%20temperature%20alta:%20"+("{:.1f}").format(dht.temperature))
            else:
                sleep(2)
        
def destroy():
    lcd.clear()
    
def alertor(message):
    buzzState = False
    try:
        url = "https://toidigitalagency.it/ajax/alert/8/" + message
        webUrl = urllib.request.urlopen(url)
    except:
        print("Errore di connessione! " + url)
        for x in range(0,4):
            buzzState = not buzzState
            GPIO.output(buzzerPin, buzzState)
            sleep(0.5)
    else:
        print(str(webUrl.getcode()))
        for x in range(0,10):
            buzzState = not buzzState
            GPIO.output(buzzerPin, buzzState)
            sleep(0.2)
    
PCF8574_address = 0x27  # I2C address of the PCF8574 chip.
PCF8574A_address = 0x3F  # I2C address of the PCF8574A chip.
# Create PCF8574 GPIO adapter.
try:
    mcp = PCF8574_GPIO(PCF8574_address)
except:
    try:
        mcp = PCF8574_GPIO(PCF8574A_address)
    except:
        print ('I2C Address Error !')
        exit(1)
# Create LCD, passing in MCP GPIO adapter.
lcd = Adafruit_CharLCD(pin_rs=0, pin_e=2, pins_db=[4,5,6,7], GPIO=mcp)

if __name__ == '__main__':
    print ('Avvio programma... ')
    alertor("RaspiServer%20Termostato%20Attivo!")
    try:
        loop()
    except KeyboardInterrupt:
        GPIO.cleanup()
        destroy()
        exit()  
        
